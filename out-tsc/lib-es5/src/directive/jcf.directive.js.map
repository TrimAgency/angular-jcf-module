{"version":3,"sources":["../../../lib/src/directive/jcf.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAA+B,YAAA,EAAa,MAAA,eAAA,CAAA;AAChE,OAAO,KAAK,GAAA,MAAA,KAAA,CAAA;AACZ;IACA;;OAEG;IACH,sBAAuB,OAAS;QAAT,YAAA,GAAA,OAAA,CAAS;IAAW,CAAA;IAE3C;;OAEG;IACH,+BAHG,GAGH;QACI,GAAG,CAHC,UAAC,CAAU,QAAC,EAAS;YAItB,UAAU,EAHE,KAAA;YAIZ,kBAAkB,EAHE,KAAA;SAItB,CAHC,CAAC;QAKH,GAAG,CAHC,OAAC,CAAO,IAAC,CAAI,OAAC,CAAO,aAAC,CAAa,CAAC;IAI1C,CAAC;IACH;;;OAGG;IACH,+BALG,GAKH,UALG,KAAA;QAME,GAAG,CALC,OAAC,CAAO,IAAC,CAAI,OAAC,CAAO,aAAC,CAAa,CAAC;IAM3C,CAAC;IACH;;OAEG;IACH,kCAPG,GAOH;QACI,GAAG,CAPC,OAAC,CAAO,IAAC,CAAI,OAAC,CAAO,aAAC,CAAa,CAAC;IAQ1C,CAAC;IAgBH,mBAAC;AAAD,CA7CA,AA6CC;;AAtBM,uBAAA,GAAoC;IAQ3C,EAPE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAQvB,8CAA8C;gBAC9C,QAAQ,EAPE,OAAA;aAQX,EAPC,EAAG;CAQJ,CAPC;AAQF;;GAEG;AARF,2BAAA,GAAA,cAAA,OAAA;IAUD,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,EAXA,CAWA,CAAC;AARK,2BAAA,GAAyD;IAUhE,UAAU,EATE,CAAA,EAAG,IAAA,EAAM,YAAA,EAAc,IAAA,EAAM,CAAA,QAAE,EAAS,CAAA,QAAE,CAAQ,EAAC,EAAG,EAAE;CAUnE,CATC;AAYF;IACA,gBAAgB;IAChB,YAAY,CAAC,UAAU,CAAC;IACxB;;;OAGG;IACH,YAAY,CAAC,cAAc,CAAC;IAC5B,gBAAgB;IAChB,YAAY,CAAC,cAAc,CAAC;IAC5B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC;AAC/B,CAAC","file":"jcf.directive.js","sourceRoot":"","sourcesContent":["import { Directive, ElementRef, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport * as jcf from 'jcf';\nexport class JcfDirective implements OnInit, OnDestroy{\n/**\n * @param {?} element\n */\nconstructor(\nprivate element: ElementRef ){}\n/**\n * @return {?}\n */\nngOnInit() {\n    jcf.setOptions('Select', {\n       wrapNative: false,\n       wrapNativeOnMobile: false\n    });\n\n    jcf.replace(this.element.nativeElement);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonChange(event: Event) {\n     jcf.refresh(this.element.nativeElement);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    jcf.destroy(this.element.nativeElement);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  // tslint:disable-next-line:directive-selector\n  selector: '[jcf]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onChange': [{ type: HostListener, args: ['change', ['$event'], ] },],\n};\n}\n\nfunction JcfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nJcfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJcfDirective.ctorParameters;\n/** @type {?} */\nJcfDirective.propDecorators;\n/** @type {?} */\nJcfDirective.prototype.element;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}